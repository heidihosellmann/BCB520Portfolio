{
  "hash": "437a15f5329cf796d0f2b15f4ed59b93",
  "result": {
    "markdown": "---\ntitle: \"BCB 520 Assignment 5\"\nsubtitle: \"Tabular Data NHL Draft Analysis\"\nauthor: \"Heidi Sellmann\"\ndate: \"2024-02-24\"\ncategories: [Assignments, Data Viz, Tables, Scatterplot, Barplot, Piechart]\nimage: \"canuck.png\"\ncode-fold: true\ncode-tools: true\ncode-link: true\ndescription: \"Should I trade these draft picks for this bag of magic beans...?\"\nformat: html\neditor: visual\n---\n\n\n## OVERVIEW\n\nIn this assignment, we are going to practice creating visualizations for tabular data where everyone will engage in the same logic process and have the same design objectives in mind.\n\n## LEARNING OBJECTIVES\n\n1. Demonstrate that you can manipulate tabular data to facilitate different visualization tasks. The minimum skills are FILTERING, SELECTING, and SUMMARIZING, all while GROUPING these operations as dictated by your data.\n2. Demonstrate that you can use tabular data to explore, analyze, and choose the most appropriate visualization idioms given a specific motivating question.\n3. Demonstrate that you can Find, Access, and Integrate additional data in order to fully address the motivating question.\n\nThe scenario below will allow you to complete the assignment.  It deals with data that are of the appropriate complexity and extent (number of observations and variables) to challenge you.\n\n## SCENARIO \n\nHockey and drafting. Was the trade worth it? Did Vancouver or Calgary \"win\" the trade (outlined in Assignment 5)?\n\nCan we make some visualizations that help us answer this question?\n\n# Load libraries/Read in data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNHLDraft<-read.csv(\"NHLDraft.csv\")\nNHLDictionary<-read_excel(\"NHLDictionary.xlsx\")\n\nknitr::kable(NHLDictionary)\n```\n\n::: {.cell-output-display}\n|Attribute   |Type         |Description                                                                                                           |\n|:-----------|:------------|:---------------------------------------------------------------------------------------------------------------------|\n|draftyear   |Ordinal      |Calendar year in which the player was drafted into the NHL.                                                           |\n|name        |Item         |Full name of the player.                                                                                              |\n|round       |Ordinal      |Round in which the player was drafted (1 to 7).                                                                       |\n|overall     |Ordinal      |Overall draft position of the player (1 to 224)                                                                       |\n|pickinRound |Ordinal      |Position in which the player was drafted in their round (1 to 32).                                                    |\n|height      |Quantitative |Player height in inches.                                                                                              |\n|weight      |Quantitative |Player weight in pounds.                                                                                              |\n|position    |Categorical  |Player position (Forward, Defense, Goaltender)                                                                        |\n|playerId    |Item         |Unique ID (key) assigned to each player.                                                                              |\n|postdraft   |Ordinal      |Number of seasons since being drafted (0 to 20).                                                                      |\n|NHLgames    |Quantitative |Number of games played in the NHL in that particular season (regular season is 82 games, playoffs are up to 28 more). |\n:::\n:::\n\nAs Barries states, we have a dataframe with all the drafted players from 2000-2018, their position, their draft year and position, and then rows for each season since being drafted (`postdraft`). The key variable here is `NHLgames`, which tells us how many games they played in the NHL each season since being drafted.  Whether drafted players even make the NHL, and how many games they play, might be a good proxy to understand the value of a draft pick we just traded away.\n\n## SIMPLE SCATTERPLOT\n\nJust like many pro sports, it is pretty rare for a player to play in the NHL right after being drafted. Players get drafted when they are 18 years old, and they usually play in the juniors, minor leagues, or the NCAA to further develop. \n\nLet's use a scatterplot to visualize this phenomenon with the most recent draft classes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndraft2022<-NHLDraft%>%\n  filter(draftyear==2022 & postdraft==0)\n\nggplot(draft2022, aes(x=round, y=NHLgames))+\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](Assignment-5-NHL-Draft-Analysis_files/figure-html/Scatterplot-1.png){width=672}\n:::\n:::\n\nAha! Many players drafted in June of 2022 didn't play much last season. There are few things wrong with this visualization, however:\n\n# START HERE!!!!\n\n1.  **Overplotting.** All those points on the y=0 line represent about 32 players each. Can you think of a way that adding extra channels might help? Hmm... jitter? Boxplots? \n2.  **Labelling.** Can we create a solid figure caption and better axis labels for this figure? In your caption, please specify the task(s) the visualizaiton is intended to facilitate, as well as the marks, channels, and key-value pairs used. \n3.  **Key-Value pairs:** Looks like we are using \"round\" as a continuous variable. Can we change this to an ordered factor?\n\n## EXPANDED SCATTERPLOT\n\nThe data from the most recent drafts aren't really helpful for our question. Let's go back in time and use a draft year that has had some time to develop and reach their potential. How about 2018?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndraft2018<-NHLDraft%>%\n  filter(draftyear==2018 & postdraft<6) \n\n# wondering why I've filtered postdraft to be less than 6?  Try removing that filter to see what happens.\n\nggplot(draft2018, aes(x=round, y=NHLgames))+\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](Assignment-5-NHL-Draft-Analysis_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nHmmm... in addition to the problem of overplotting, we've got an additional issue here. We actually have two keys and one attribute. The attribute is `NHLgames`, and the keys are `round` and `postdraft`, but we are only using round.\n\nPostdraft indicates the number of seasons after being drafted. We have several choices here. We can make a visualization that uses both keys, or we can somehow summarize the data for one of the keys.\n\nFor example, let's say we just wanted to know the TOTAL number of NHL games played since being drafted.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrafttot2018<- draft2018%>%\n  group_by(playerId, round, overall, position, name)%>%\n  summarise(totgames=sum(NHLgames))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'playerId', 'round', 'overall', 'position'.\nYou can override using the `.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nggplot(drafttot2018, aes(x=round, y=totgames))+\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](Assignment-5-NHL-Draft-Analysis_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nLook closely at the two graphs above.  How are they different?\n\n## STOP AND REFLECT",
    "supporting": [
      "Assignment-5-NHL-Draft-Analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}