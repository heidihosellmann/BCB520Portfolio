---
title: "BCB 520 Assignment 5"
output:
  quarto::quarto_html: default
  html_document: default
    toc:true
subtitle: "Tabular Data NHL Draft Analysis"
author: "Heidi Sellmann"
date: "2024-02-24"
categories: [Assignments, Data Viz, Tables, Scatterplot, Barplot, Piechart]
image: "canuck.png"
code-fold: true
code-tools: true
code-link: true
description: "Was the trade worth it?"
format: html
editor: visual
---

```{r}
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, error=FALSE, message=FALSE)
```

## OVERVIEW

In this assignment, we are going to practice creating visualizations for tabular data where everyone will engage in the same logic process and have the same design objectives in mind.

## LEARNING OBJECTIVES

1.  Demonstrate that you can manipulate tabular data to facilitate different visualization tasks. The minimum skills are FILTERING, SELECTING, and SUMMARIZING, all while GROUPING these operations as dictated by your data.
2.  Demonstrate that you can use tabular data to explore, analyze, and choose the most appropriate visualization idioms given a specific motivating question.
3.  Demonstrate that you can Find, Access, and Integrate additional data in order to fully address the motivating question.

The scenario below will allow you to complete the assignment. It deals with data that are of the appropriate complexity and extent (number of observations and variables) to challenge you.

## SCENARIO

Hockey and drafting. Was the trade worth it? Did Vancouver or Calgary "win" the trade (outlined in Assignment 5)?

Can we make some visualizations that help us answer this question?

If you are solely interested in my Conclusive Figure and conclusion drawn from it, see Figure \@ref(Conclusive_Figure) for details.

(I left fluff from the original assignment because it was helpful for me to work through.)

## Load libraries/Read in data

```{r Load libraries, include=FALSE}
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)

```

```{r Read in data}
NHLDraft<-read.csv("NHLDraft.csv")
NHLDictionary<-read_excel("NHLDictionary.xlsx")

knitr::kable(NHLDictionary)
```

As Barrie states, we have a data frame with all the drafted players from 2000-2018, their position, their draft year and position, and then rows for each season since being drafted (`postdraft`). The key variable here is `NHLgames`, which tells us how many games they played in the NHL each season since being drafted. Whether drafted players even make the NHL, and how many games they play, might be a good proxy to understand the value of a draft pick we just traded away.

## SIMPLE SCATTERPLOT

Just like many pro sports, it is pretty rare for a player to play in the NHL right after being drafted. Players get drafted when they are 18 years old, and they usually play in the juniors, minor leagues, or the NCAA to further develop.

Let's use a scatterplot to visualize this phenomenon with the most recent draft classes.

```{r Scatterplot}
draft2022<-NHLDraft%>%
  filter(draftyear==2022 & postdraft==0)

ggplot(draft2022, aes(x=round, y=NHLgames))+
  geom_point()

```

**Figure 1.** Scatterplot depicting number of NHL games played after being drafted from various rounds during the year of 2022.

**MARKS** = Points

**CHANNELS** = Position

**KEY-VALUE PAIRS** = Only values of round pick number and games played in the NHL.

Ok so this scatterplot shows that 1st round picks play the most NHL games, at least those drafted in June 2022. As round picks increase, those players often play less NHL games.

There are few things wrong with this visualization, however:

1.  **Overplotting.** All those points on the y=0 line represent about 32 players each. Can you think of a way that adding extra channels might help?

Hmm... jitter?

```{r Scatterplot with jitter}
draft2022<-NHLDraft%>%
  filter(draftyear==2022 & postdraft==0)

ggplot(draft2022, aes(x = round, y = NHLgames)) +
  geom_jitter(aes(color = pickinRound), width = 0.2, height = 0) +  # Adjust width for x-axis jitter
  geom_point() +
  labs(x = "Round Picked", y = "NHL Games") +  # Adding axis labels
  ggtitle("Relationship Between Round Picked and NHL Games Played")  # Adding a title
  
    
```

I added an additional channel/key of jitter reflecting picks in round and color showing the spectrum of picks in round... Not sure how helpful this is, but I tried!

2.  **Labeling.** Can we create a solid figure caption and better axis labels for this figure? In your caption, please specify the task(s) the visualization is intended to facilitate, as well as the marks, channels, and key-value pairs used.

(I added these above)

3.  **Key-Value pairs:** Looks like we are using "round" as a continuous variable. Can we change this to an ordered factor?

Hmm... I am not sure. Use/add in additional/other variables, perhaps?

## EXPANDED SCATTERPLOT

The data from the most recent drafts aren't really helpful for our question. Let's go back in time and use a draft year that has had some time to develop and reach their potential. How about 2018?

```{r}
draft2018<-NHLDraft%>%
  filter(draftyear==2018 & postdraft<6) 

# wondering why I've filtered postdraft to be less than 6?  Try removing that filter to see what happens.

ggplot(draft2018, aes(x=round, y=NHLgames))+
  geom_point()

```

Hmmm... in addition to the problem of overplotting, we've got an additional issue here. We actually have two keys and one attribute. The attribute is `NHLgames`, and the keys are `round` and `postdraft`, but we are only using round.

... explicitly, right? Of note, we filtered by only using the draft year of 2018 and included NHL games played up to 6 years from that draft (so 2024 if I did my math right). This makes sense- we are in the year 2024!

As I just touched on above, postdraft indicates the number of seasons after being drafted. We have several choices here. We can make a visualization that uses both keys, or we can somehow summarize the data for one of the keys.

Alrighty, sounds good to me.

For example, let's say we just wanted to know the TOTAL number of NHL games played since being drafted. We will make it a new variable!

```{r message=FALSE}
drafttot2018<- draft2018%>%
  group_by(playerId, round, overall, position, name)%>%
  summarise(totgames=sum(NHLgames))

ggplot(drafttot2018, aes(x=round, y=totgames))+
  geom_point()

```

Look closely at the two graphs above. How are they different?

Hmm... it looks like this graph has accounted for/ordered other attributes. I am not sure exactly how though. I just notice in the code that we have grouped by playerId, round, overall, position, and name... Perhaps this is what makes the second graph seem a bit more ordered?

Further, we also came up with "totgames" as a sum of "NHLgames". So if I am following, totgames = sum of NHL games played as ordered by those previous variables (playerId, round, overall, position, name)?

## STOP AND REFLECT

We need to think about how Barrie has been manipulating the data...

He says: I'm using the [Tidyverse](https://www.tidyverse.org) to do these manipulations. I set up the original data frame to conform to the tidy data principles (every column is a variable, every row is an observation), which is pretty much the base form of how we've discussed [Tabular Data](../L6-TabularData1) in class.

I've snuck in some functions that have allowed me to FILTER, GROUP, and SUMMARIZE the data, often creating new dataframes as I do so. Hey, look! [A handy cheatsheet for data transformation using the tidyverse!](https://github.com/rstudio/cheatsheets/blob/main/data-transformation.pdf)

These functions come from the [dplyr package](https://dplyr.tidyverse.org) that gets installed as part of the tidyverse. The basic categories of actions are:

-   mutate() adds new variables that are functions of existing variables
-   select() picks variables based on their names.
-   filter() picks cases based on their values.
-   summarise() reduces multiple values down to a single summary.
-   arrange() changes the ordering of the rows.

All of these work with group_by() so you can perform whichever operation on the groups that might be present in your data set.

Ok great... I am starting to get the lingo. Earlier we did group_by() and summarise().

Let's get back to improving our understanding of the relative value of NHL draft picks. The figure above considers a single draft class (2018), and shows the total number of NHL games all the players have accumulated, separating each draft round on an ordinal x axis.

Got it!

Fine, I guess, but we still have to deal with overplotting, and think about whether a scatterplot really helps us accomplish our task.

## SCATTERPLOT WITH OVERALL DRAFT POSITION

This approach might yield a better match with the scatterplot idiom. What if we ignore draft round, and use the player's overall draft position instead? It also might help us focus on our motivating question! What is the potential value of pick 31, and how does Elias Lindholm compare to that value?

Yes! We want to apply these manipulations to get a better feel for this 31st pick. And looking at this as a function of NHL games played.

```{r warning=FALSE}

ggplot(drafttot2018, aes(x=overall, y=totgames))+
  geom_point()+
  xlim(1, 50)

```

I took the liberty of zooming in the x axis to 0-50. After all, Elias was a 31st round pick! This allows us to see how many games other typical 31-ish picks play (at least from the 2018 draft year).

## SCATTERPLOT SUMMARY

We seem to be running into an issue in terms of overplotting. Scatterplots are great, but they work best for two quantitative attributes, and we have a situation with one or two keys and one quantitative attribute. The thing is, scatterplots can be very useful when part of our workflow involves modeling the data in some way. We'll cover this kind of thing in future assignments, but just a bit of foreshadowing here:

```{r message=FALSE}

ggplot(drafttot2018, aes(x=round, y=totgames))+
  geom_point()+
  geom_smooth()

```

Adding the smoothed line doesn't eliminate the overplotting problem, but it does indicate that it exists. We'll cover other potential solutions (such as box plots and violin plots) to this issue later in the course, when we get to the notions of faceting and data reduction.

Why not include all the data? A scatter plot with that many players (4775) isn't going to be great. But we could plot some sort of polynomial model to get a sense of the relationship between draft position and NHL games. We'll filter to the first 8 years of their career.

Sounds good to me!

```{r message=FALSE}

drafttot<- NHLDraft%>%
  filter(postdraft<8)%>%
  group_by(playerId, round, overall, position, name)%>%
  summarise(totgames=sum(NHLgames))


ggplot(drafttot, aes(x=overall, y=totgames))+
  geom_smooth()


```

Or we could visualize the average number of games played as a function of time since being drafted.

```{r message=FALSE}

ggplot(NHLDraft, aes(x=postdraft, y=NHLgames))+
  geom_smooth(aes(color=as.factor(round)))
```

I personally really like this figure. And in class we manipulated it to better answer the question of if the trade was a good trade.

I am going to try to recreate a version of sorts of this figure above for my **CONCLUSIVE FIGURE**. In doing so, I will try to get back to the point of this assignment in the first place.

I want to compare Elias himself (who's draft data from 2013 is in the dataset) to other good players (measured by their round picked, but position specific). On the y axis, I don't want to just look at games played, but the performance within those games. The variable "points" will be used to do this as it summarizes goals and assists- valuable player performance stats indeed, at least I would guess so for a forward!

(As Barrie's original hint eluded to, I am going to use the `NHLdraftstats.csv`data to gather these performance measures.)

```{r Getting Elias data, echo=FALSE}
getwd()
library(readr)
NHLdraftstats <- read_csv("NHLdraftstats.csv")
View(NHLdraftstats)

elias_lindholm_data <- filter(NHLdraftstats, name == "Elias Lindholm")
knitr::kable(elias_lindholm_data)
```

Now I want to look at a graph that looks at points scored over the seasons following being drafted. I like that the lines then represent various rounds from which the players were drafted.

```{r Looking at points scored vs postdraft year, message=FALSE}

ggplot(NHLdraftstats, aes(x = postdraft, y = points)) +
  geom_smooth(aes(color = as.factor(round)))
```

I then filtered this so that it only includes comparable players to Elias- those who are forwards and weigh between 175-220 lbs.

```{r Filtered data, message=FALSE}
filtered_data <- NHLdraftstats %>%
  filter(position == "Forward", weight >= 175, weight <= 220)

ggplot(filtered_data, aes(x = postdraft, y = points)) +
  geom_smooth(aes(color = as.factor(round)))
```

I then added Elias' data on top of that to see how he compares. Especially since we traded him for a future 1st round pick, this visualization helps us see how Elias and the possible/future/typical 1st round guy compare. I also changed the x axis to only include the first 10 years postdraft, especially since Elias was drafted in 2013, 10 years puts us to the current year.

```{r Conclusive_Figure, fig.cap="Conclusive Figure", message=FALSE, warning=FALSE}

filtered_data <- NHLdraftstats %>%
  filter(position == "Forward", weight >= 175, weight <= 220)

ggplot(filtered_data, aes(x = postdraft, y = points)) +
  geom_smooth(aes(color = as.factor(round)))+
  geom_point(data = elias_lindholm_data, aes(x = postdraft, y = points), color = "purple")+
  xlim(1, 10)
```

**Conclusive Figure** shows average points (summarized from goals and assists) scored by players drafted from previous draft seasons who are forwards and weigh between 175-220 pounds. Colored lines indicate the average stats of those drafted from different rounds. Purple scatter points are reflective of Elias Lindholm's performance every season since being drafted in 2013 as a 31st round draft pick.

# CONCLUSION

As the figure above goes to show, Elias is a standout- even compared to average 1st round picks who were also forwards around his weight.

All in all, I say the Canucks made a great decision given their success this seasson. As for Calgary, I think they let go of a well-performing player, but who is to say the up and coming 1st draft pick they get in the future may not also be a stand out? To be determined...
